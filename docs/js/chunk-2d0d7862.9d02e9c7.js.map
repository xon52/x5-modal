{"version":3,"sources":["webpack:///./example/InteractiveModal.vue?3ab9","webpack:///example/InteractiveModal.vue","webpack:///./example/InteractiveModal.vue?e2ff","webpack:///./example/InteractiveModal.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","_s","data","_m","directives","name","rawName","value","expression","attrs","domProps","on","$event","target","composing","result","staticRenderFns","props","methods","close","$x5","closeModal","submit","$emit","setTimeout","created","buttons","title","onOK","onCancel","keepOpen","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,IAAI,CAACJ,EAAIM,GAAG,uCAAuCF,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACP,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIS,KAAQT,EAAIS,KAAO,MAAS,+BAA+BT,EAAIU,GAAG,GAAGV,EAAIM,GAAG,6CAA6CF,EAAG,QAAQ,CAACO,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOd,EAAU,OAAEe,WAAW,WAAWR,YAAY,QAAQS,MAAM,CAAC,YAAc,kBAAkB,UAAY,MAAMC,SAAS,CAAC,MAASjB,EAAU,QAAGkB,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAqBrB,EAAIsB,OAAOH,EAAOC,OAAON,cACznBS,EAAkB,CAAC,WAAa,IAAIvB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIM,GAAG,gDAAgDF,EAAG,OAAO,CAACJ,EAAIM,GAAG,UAAUN,EAAIM,GAAG,wCAAwCF,EAAG,OAAO,CAACJ,EAAIM,GAAG,0CAA0CN,EAAIM,GAAG,QAAQF,EAAG,KAAK,CAACJ,EAAIM,GAAG,oCAAoCF,EAAG,OAAO,CAACJ,EAAIM,GAAG,UAAUN,EAAIM,GAAG,SAASF,EAAG,OAAO,CAACJ,EAAIM,GAAG,cAAcN,EAAIM,GAAG,yFAAyFF,EAAG,KAAK,CAACJ,EAAIM,GAAG,kEAAkEF,EAAG,OAAO,CAACJ,EAAIM,GAAG,+BAA+BN,EAAIM,GAAG,4CAA4CF,EAAG,KAAK,CAACJ,EAAIM,GAAG,2BAA2BF,EAAG,OAAO,CAACJ,EAAIM,GAAG,iBAAiBN,EAAIM,GAAG,QAAQF,EAAG,OAAO,CAACJ,EAAIM,GAAG,aAAaN,EAAIM,GAAG,gFAAgFF,EAAG,OAAO,CAACJ,EAAIM,GAAG,qBAAqBN,EAAIM,GAAG,2BAA2BF,EAAG,KAAK,CAACJ,EAAIM,GAAG,4IAA4IF,EAAG,MAAMA,EAAG,OAAO,CAACJ,EAAIM,GAAG,gDAAgDN,EAAIM,GAAG,YCiCzuC,G,UAAA,CACEM,KAAM,mBACNY,MAAO,CAAC,QACRf,KAAM,WAAR,OACA,cAEEgB,QAAS,CACPC,MADJ,WAEMzB,KAAK0B,IAAIC,WAAW,cAAe3B,KAAKqB,SAE1CO,OAJJ,WAIA,WACM5B,KAAK6B,MAAM,cAAc,GACzBC,YAAW,WACT,EAAR,uBACQ,EAAR,UACA,OAGEC,QAlBF,WAmBI/B,KAAK6B,MAAM,WAAY,CACrBG,QAAS,WACTC,MAAO,oBACPC,KAAMlC,KAAK4B,OACXO,SAAUnC,KAAKyB,MACfW,UAAU,OC1D2T,I,YCOvUC,EAAY,eACd,EACAvC,EACAwB,GACA,EACA,KACA,KACA,MAIa,aAAAe,E","file":"js/chunk-2d0d7862.9d02e9c7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\" The value sent to this modal was: \"),_c('span',{staticClass:\"boxed greyed\"},[_vm._v(_vm._s(_vm.data ? (_vm.data + \" ðŸ˜€\") : 'Oh no, it was empty ðŸ˜¥'))])]),_vm._m(0),_vm._v(\" A return value to send back (optional): \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.result),expression:\"result\"}],staticClass:\"boxed\",attrs:{\"placeholder\":\"Value to return\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.result)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.result=$event.target.value}}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\" This component receives data from the prop \"),_c('code',[_vm._v(\"data\")]),_vm._v(\", defined when the modal is opened: \"),_c('code',[_vm._v(\"$x5.openModal('interactive', [DATA])\")]),_vm._v(\". \")]),_c('li',[_vm._v(\" It also sets the modal options \"),_c('code',[_vm._v(\"onOK\")]),_vm._v(\" and \"),_c('code',[_vm._v(\"onCancel\")]),_vm._v(\", linking them to its own methods to fire after each respective button is pressed. \")]),_c('li',[_vm._v(\" When you press ok, it also toggles the loading overlay using \"),_c('code',[_vm._v(\"$emit('setLoading', true)\")]),_vm._v(\" to simulate processing a submission. \")]),_c('li',[_vm._v(\" By either setting the \"),_c('code',[_vm._v(\"cancelValue\")]),_vm._v(\" or \"),_c('code',[_vm._v(\"okValue\")]),_vm._v(\" options, you can resolve the modal with a result where it was opened using \"),_c('code',[_vm._v(\"$x5.openModal()\")]),_vm._v(\" which is a promise. \")]),_c('li',[_vm._v(\" Alternatively, if you close the modal yourself (as this example does), you can give a value to resolve with from within the close call:\"),_c('br'),_c('code',[_vm._v(\"$x5.closeModal('interactive', returnValue)\")]),_vm._v(\". \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p>\r\n      The value sent to this modal was:\r\n      <span class=\"boxed greyed\">{{ data ? `${data} ðŸ˜€` : 'Oh no, it was empty ðŸ˜¥' }}</span>\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        This component receives data from the prop <code>data</code>, defined when the modal is opened:\r\n        <code>$x5.openModal('interactive', [DATA])</code>.\r\n      </li>\r\n      <li>\r\n        It also sets the modal options <code>onOK</code> and <code>onCancel</code>, linking them to its own methods to\r\n        fire after each respective button is pressed.\r\n      </li>\r\n      <li>\r\n        When you press ok, it also toggles the loading overlay using <code>$emit('setLoading', true)</code> to simulate\r\n        processing a submission.\r\n      </li>\r\n      <li>\r\n        By either setting the <code>cancelValue</code> or <code>okValue</code> options, you can resolve the modal with a\r\n        result where it was opened using <code>$x5.openModal()</code> which is a promise.\r\n      </li>\r\n      <li>\r\n        Alternatively, if you close the modal yourself (as this example does), you can give a value to resolve with from\r\n        within the close call:<br /><code>$x5.closeModal('interactive', returnValue)</code>.\r\n      </li>\r\n    </ul>\r\n    A return value to send back (optional):\r\n    <input v-model=\"result\" placeholder=\"Value to return\" class=\"boxed\" maxlength=\"20\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'InteractiveModal',\r\n  props: ['data'],\r\n  data: () => ({\r\n    result: null\r\n  }),\r\n  methods: {\r\n    close() {\r\n      this.$x5.closeModal('interactive', this.result)\r\n    },\r\n    submit() {\r\n      this.$emit('setLoading', true)\r\n      setTimeout(() => {\r\n        this.$emit('setLoading', false)\r\n        this.close()\r\n      }, 2000)\r\n    }\r\n  },\r\n  created() {\r\n    this.$emit('setModal', {\r\n      buttons: 'OKCancel',\r\n      title: 'Interactive Modal',\r\n      onOK: this.submit,\r\n      onCancel: this.close,\r\n      keepOpen: true\r\n    })\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteractiveModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteractiveModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InteractiveModal.vue?vue&type=template&id=4968835e&\"\nimport script from \"./InteractiveModal.vue?vue&type=script&lang=js&\"\nexport * from \"./InteractiveModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}